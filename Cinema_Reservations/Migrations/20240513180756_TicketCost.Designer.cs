// <auto-generated />
using System;
using Cinema_Reservations.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cinema_Reservations.Migrations
{
    [DbContext(typeof(CinemaContext))]
    [Migration("20240513180756_TicketCost")]
    partial class TicketCost
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Cinema_Reservations.Models.Cinema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cinemas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Wiejska 45A, Białystok",
                            Name = "PBCinema"
                        });
                });

            modelBuilder.Entity("Cinema_Reservations.Models.CinemaHall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CinemaId")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CinemaId");

                    b.ToTable("CinemaHalls");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Number = 1,
                            Type = 84
                        },
                        new
                        {
                            Id = 2,
                            Number = 2,
                            Type = 168
                        },
                        new
                        {
                            Id = 3,
                            Number = 3,
                            Type = 280
                        });
                });

            modelBuilder.Entity("Cinema_Reservations.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Producer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductionYear")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Byt ludzkości na Ziemi dobiega końca wskutek zmian klimatycznych. Grupa naukowców odkrywa tunel czasoprzestrzenny, który umożliwia poszukiwanie nowego domu.",
                            ImagePath = "D:\\Zdjęcia\\RSI\\interstellar.jpg",
                            Name = "Interstellar",
                            Producer = "Christopher Nolan",
                            ProductionYear = 2014
                        },
                        new
                        {
                            Id = 2,
                            Description = "Jake, sparaliżowany były komandos, zostaje wysłany na planetę Pandora, gdzie zaprzyjaźnia się z lokalną społecznością i postanawia jej pomóc.",
                            ImagePath = "D:\\Zdjęcia\\RSI\\avatar.jpg",
                            Name = "Avatar",
                            Producer = "James Cameron",
                            ProductionYear = 2009
                        },
                        new
                        {
                            Id = 3,
                            Description = "Po wymazaniu połowy życia we Wszechświecie przez Thanosa Avengersi starają się zrobić wszystko, co konieczne, aby pokonać szalonego tytana.",
                            ImagePath = "D:\\Zdjęcia\\RSI\\avengers_endgame.jpg",
                            Name = "Avengers: Endgame",
                            Producer = "Anthony Russo, Joe Russo",
                            ProductionYear = 2019
                        });
                });

            modelBuilder.Entity("Cinema_Reservations.Models.Playing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CinemaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("HallId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<float>("TicketCost")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CinemaId");

                    b.HasIndex("HallId");

                    b.HasIndex("MovieId");

                    b.ToTable("Playings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2025, 5, 13, 20, 7, 56, 427, DateTimeKind.Local).AddTicks(7077),
                            HallId = 1,
                            MovieId = 1,
                            State = 0,
                            TicketCost = 0f
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2025, 5, 14, 20, 7, 56, 427, DateTimeKind.Local).AddTicks(7110),
                            HallId = 1,
                            MovieId = 2,
                            State = 0,
                            TicketCost = 0f
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2025, 5, 14, 20, 7, 56, 427, DateTimeKind.Local).AddTicks(7113),
                            HallId = 2,
                            MovieId = 2,
                            State = 0,
                            TicketCost = 0f
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2025, 5, 15, 20, 7, 56, 427, DateTimeKind.Local).AddTicks(7115),
                            HallId = 2,
                            MovieId = 3,
                            State = 0,
                            TicketCost = 0f
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateTime(2025, 5, 16, 20, 7, 56, 427, DateTimeKind.Local).AddTicks(7117),
                            HallId = 3,
                            MovieId = 1,
                            State = 0,
                            TicketCost = 0f
                        },
                        new
                        {
                            Id = 6,
                            Date = new DateTime(2025, 5, 17, 20, 7, 56, 427, DateTimeKind.Local).AddTicks(7121),
                            HallId = 3,
                            MovieId = 3,
                            State = 0,
                            TicketCost = 0f
                        });
                });

            modelBuilder.Entity("Cinema_Reservations.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("PlayingId")
                        .HasColumnType("int");

                    b.Property<float>("ReservationCost")
                        .HasColumnType("real");

                    b.Property<int>("SeatCount")
                        .HasColumnType("int");

                    b.Property<string>("Seats")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayingId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("Cinema_Reservations.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@admin.pl",
                            Name = "admin",
                            Password = "admin"
                        });
                });

            modelBuilder.Entity("Cinema_Reservations.Models.CinemaHall", b =>
                {
                    b.HasOne("Cinema_Reservations.Models.Cinema", null)
                        .WithMany("Halls")
                        .HasForeignKey("CinemaId");
                });

            modelBuilder.Entity("Cinema_Reservations.Models.Playing", b =>
                {
                    b.HasOne("Cinema_Reservations.Models.Cinema", null)
                        .WithMany("Playings")
                        .HasForeignKey("CinemaId");

                    b.HasOne("Cinema_Reservations.Models.CinemaHall", "Hall")
                        .WithMany()
                        .HasForeignKey("HallId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cinema_Reservations.Models.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hall");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("Cinema_Reservations.Models.Reservation", b =>
                {
                    b.HasOne("Cinema_Reservations.Models.Playing", "Playing")
                        .WithMany("Reservations")
                        .HasForeignKey("PlayingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cinema_Reservations.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Playing");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cinema_Reservations.Models.Cinema", b =>
                {
                    b.Navigation("Halls");

                    b.Navigation("Playings");
                });

            modelBuilder.Entity("Cinema_Reservations.Models.Playing", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
